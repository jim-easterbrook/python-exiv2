# This file was generated by utils/extract_enums.py
# Do not make changes to this file.

enum_data = {'Exiv2::AccessMode': {'doc': 'An identifier for each mode of metadata '
                              'support. ',
                       'values': {}},
 'Exiv2::BasicIo::Position': {'doc': 'Seek starting positions. ',
                              'values': {}},
 'Exiv2::ByteOrder': {'doc': 'Type to express the byte order (little or '
                             'big endian) ',
                      'values': {}},
 'Exiv2::CommentValue::CharsetId': {'doc': 'Character set identifiers for '
                                           'the character sets defined by '
                                           'Exif. ',
                                    'values': {}},
 'Exiv2::ErrorCode': {'doc': 'Complete list of all Exiv2 error codes. ',
                      'values': {'kerDataAreaValueTooLarge': 'Entry::setDataArea: '
                                                             'Value too '
                                                             'large. ',
                                 'kerValueTooLarge': 'Entry::setValue: '
                                                     'Value too large. '}},
 'Exiv2::ImageType': {'doc': 'Supported image formats. ',
                      'values': {'arw': 'ARW image type (see class '
                                        'TiffImage) ',
                                 'asf': 'Treating asf as an image type> ',
                                 'bmff': 'BMFF (bmff) image type (see '
                                         'class BMFF) ',
                                 'bmp': 'Windows bitmap (bmp) image type '
                                        '(see class BmpImage) ',
                                 'cr2': 'CR2 image type (see class '
                                        'Cr2Image) ',
                                 'crw': 'CRW image type (see class '
                                        'CrwImage) ',
                                 'dng': 'DNG image type (see class '
                                        'TiffImage) ',
                                 'eps': 'EPS image type. ',
                                 'exv': 'EXV image type (see class '
                                        'ExvImage) ',
                                 'gif': 'GIF image type (see class '
                                        'GifImage) ',
                                 'jp2': 'JPEG-2000 image type. ',
                                 'jpeg': 'JPEG image type (see class '
                                         'JpegImage) ',
                                 'mkv': 'Treating mkv as an image type> ',
                                 'mrw': 'MRW image type (see class '
                                        'MrwImage) ',
                                 'nef': 'NEF image type (see class '
                                        'TiffImage) ',
                                 'none': 'Not an image. ',
                                 'orf': 'ORF image type (see class '
                                        'OrfImage) ',
                                 'pef': 'PEF image type (see class '
                                        'TiffImage) ',
                                 'pgf': 'PGF image type (see class '
                                        'PgfImage) ',
                                 'png': 'PNG image type (see class '
                                        'PngImage) ',
                                 'psd': 'Photoshop (PSD) image type (see '
                                        'class PsdImage) ',
                                 'qtime': 'Treating qtime as an image '
                                          'type> ',
                                 'raf': 'RAF image type (see class '
                                        'RafImage) ',
                                 'riff': 'Treating riff as an image '
                                         'type> ',
                                 'rw2': 'RW2 image type (see class '
                                        'Rw2Image) ',
                                 'sr2': 'SR2 image type (see class '
                                        'TiffImage) ',
                                 'srw': 'SRW image type (see class '
                                        'TiffImage) ',
                                 'tga': 'Truevision TARGA (tga) image '
                                        'type (see class TgaImage) ',
                                 'tiff': 'TIFF image type (see class '
                                         'TiffImage) ',
                                 'webp': 'Treating webp as an image '
                                         'type> ',
                                 'xmp': 'XMP sidecar files (see class '
                                        'XmpSidecar) '}},
 'Exiv2::LogMsg::Level': {'doc': 'Defined log levels. To suppress all log '
                                 'messages, either set the log level to '
                                 'mute or set the log message handler to '
                                 '0. ',
                          'values': {}},
 'Exiv2::MetadataId': {'doc': 'An identifier for each type of metadata. ',
                       'values': {}},
 'Exiv2::TypeId': {'doc': 'Exiv2 value type identifiers. \n'
                          '\n'
                          'Used primarily as identifiers when creating '
                          'Exiv2 Value instances. See Value::create. '
                          '0x0000 to 0xffff are reserved for TIFF (Exif) '
                          'types. ',
                   'values': {'asciiString': 'Exif ASCII type, 8-bit '
                                             'byte. ',
                              'comment': 'Exiv2 type for the Exif user '
                                         'comment. ',
                              'date': 'IPTC date type. ',
                              'directory': 'Exiv2 type for a CIFF '
                                           'directory. ',
                              'invalidTypeId': 'Invalid type id. ',
                              'langAlt': 'XMP language alternative type. ',
                              'lastTypeId': 'Last type id. ',
                              'signedByte': 'Exif SBYTE type, an 8-bit '
                                            'signed (twos-complement) '
                                            'integer. ',
                              'signedLong': 'Exif SLONG type, a 32-bit '
                                            '(4-byte) signed '
                                            '(twos-complement) integer. ',
                              'signedLongLong': 'Exif LONG LONG type, '
                                                '64-bit (8-byte) signed '
                                                'integer. ',
                              'signedRational': 'Exif SRATIONAL type, two '
                                                'SLONGs: numerator and '
                                                'denumerator of a '
                                                'fraction. ',
                              'signedShort': 'Exif SSHORT type, a 16-bit '
                                             '(2-byte) signed '
                                             '(twos-complement) integer. ',
                              'string': 'IPTC string type. ',
                              'tiffDouble': 'TIFF DOUBLE type, double '
                                            'precision (8-byte) IEEE '
                                            'format. ',
                              'tiffFloat': 'TIFF FLOAT type, single '
                                           'precision (4-byte) IEEE '
                                           'format. ',
                              'tiffIfd': 'TIFF IFD type, 32-bit (4-byte) '
                                         'unsigned integer. ',
                              'tiffIfd8': 'TIFF IFD type, 64-bit (8-byte) '
                                          'unsigned integer. ',
                              'time': 'IPTC time type. ',
                              'undefined': 'Exif UNDEFINED type, an 8-bit '
                                           'byte that may contain '
                                           'anything. ',
                              'unsignedByte': 'Exif BYTE type, 8-bit '
                                              'unsigned integer. ',
                              'unsignedLong': 'Exif LONG type, 32-bit '
                                              '(4-byte) unsigned '
                                              'integer. ',
                              'unsignedLongLong': 'Exif LONG LONG type, '
                                                  '64-bit (8-byte) '
                                                  'unsigned integer. ',
                              'unsignedRational': 'Exif RATIONAL type, '
                                                  'two LONGs: numerator '
                                                  'and denumerator of a '
                                                  'fraction. ',
                              'unsignedShort': 'Exif SHORT type, 16-bit '
                                               '(2-byte) unsigned '
                                               'integer. ',
                              'xmpAlt': 'XMP alternative type. ',
                              'xmpBag': 'XMP bag type. ',
                              'xmpSeq': 'XMP sequence type. ',
                              'xmpText': 'XMP text type. '}},
 'Exiv2::XmpCategory': {'doc': 'Category of an XMP property. ',
                        'values': {}},
 'Exiv2::XmpValue::XmpArrayType': {'doc': 'XMP array types. ',
                                   'values': {}},
 'Exiv2::XmpValue::XmpStruct': {'doc': 'XMP structure indicator. ',
                                'values': {}}}