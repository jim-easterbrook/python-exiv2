# This file was generated by utils/extract_enums.py
# Do not make changes to this file.

enum_data = {'Exiv2::AccessMode': {'doc': 'An identifier for each mode of metadata '
                              'support. ',
                       'strong': False,
                       'values': {'amNone': {'doc': ''},
                                  'amRead': {'doc': ''},
                                  'amReadWrite': {'doc': ''},
                                  'amWrite': {'doc': ''}}},
 'Exiv2::BasicIo::Position': {'doc': 'Seek starting positions. ',
                              'strong': False,
                              'values': {'beg': {'doc': ''},
                                         'cur': {'doc': ''},
                                         'end': {'doc': ''}}},
 'Exiv2::ByteOrder': {'doc': 'Type to express the byte order (little or '
                             'big endian) ',
                      'strong': False,
                      'values': {'bigEndian': {'doc': ''},
                                 'invalidByteOrder': {'doc': ''},
                                 'littleEndian': {'doc': ''}}},
 'Exiv2::CommentValue::CharsetId': {'doc': 'Character set identifiers for '
                                           'the character sets defined by '
                                           'Exif. ',
                                    'strong': False,
                                    'values': {'ascii': {'doc': ''},
                                               'invalidCharsetId': {'doc': ''},
                                               'jis': {'doc': ''},
                                               'lastCharsetId': {'doc': ''},
                                               'undefined': {'doc': ''},
                                               'unicode': {'doc': ''}}},
 'Exiv2::ErrorCode': {'doc': 'Complete list of all Exiv2 error codes. ',
                      'strong': False,
                      'values': {'kerAliasesNotSupported': {'doc': ''},
                                 'kerArithmeticOverflow': {'doc': ''},
                                 'kerCallFailed': {'doc': ''},
                                 'kerCorruptedMetadata': {'doc': ''},
                                 'kerDataAreaValueTooLarge': {'doc': 'Entry::setDataArea: '
                                                                     'Value '
                                                                     'too '
                                                                     'large. '},
                                 'kerDataSourceOpenFailed': {'doc': ''},
                                 'kerDecodeLangAltPropertyFailed': {'doc': ''},
                                 'kerDecodeLangAltQualifierFailed': {'doc': ''},
                                 'kerEncodeLangAltPropertyFailed': {'doc': ''},
                                 'kerErrorMessage': {'doc': ''},
                                 'kerFailedToMapFileForReadWrite': {'doc': ''},
                                 'kerFailedToReadImageData': {'doc': ''},
                                 'kerFileContainsUnknownImageType': {'doc': ''},
                                 'kerFileOpenFailed': {'doc': ''},
                                 'kerFileRenameFailed': {'doc': ''},
                                 'kerFunctionNotSupported': {'doc': ''},
                                 'kerGeneralError': {'doc': ''},
                                 'kerImageWriteFailed': {'doc': ''},
                                 'kerInputDataReadFailed': {'doc': ''},
                                 'kerInvalidCharset': {'doc': ''},
                                 'kerInvalidDataset': {'doc': ''},
                                 'kerInvalidIccProfile': {'doc': ''},
                                 'kerInvalidIfdId': {'doc': ''},
                                 'kerInvalidKey': {'doc': ''},
                                 'kerInvalidKeyXmpValue': {'doc': ''},
                                 'kerInvalidLangAltValue': {'doc': ''},
                                 'kerInvalidMalloc': {'doc': ''},
                                 'kerInvalidRecord': {'doc': ''},
                                 'kerInvalidSettingForImage': {'doc': ''},
                                 'kerInvalidTag': {'doc': ''},
                                 'kerInvalidTypeValue': {'doc': ''},
                                 'kerInvalidXMP': {'doc': ''},
                                 'kerInvalidXmpText': {'doc': ''},
                                 'kerMallocFailed': {'doc': ''},
                                 'kerMemoryContainsUnknownImageType': {'doc': ''},
                                 'kerMemoryTransferFailed': {'doc': ''},
                                 'kerMultipleTiffArrayElementTagsInDirectory': {'doc': ''},
                                 'kerNoImageInInputData': {'doc': ''},
                                 'kerNoNamespaceForPrefix': {'doc': ''},
                                 'kerNoNamespaceInfoForXmpPrefix': {'doc': ''},
                                 'kerNoPrefixForNamespace': {'doc': ''},
                                 'kerNotACrwImage': {'doc': ''},
                                 'kerNotAJpeg': {'doc': ''},
                                 'kerNotAnImage': {'doc': ''},
                                 'kerOffsetOutOfRange': {'doc': ''},
                                 'kerPropertyNameIdentificationFailed': {'doc': ''},
                                 'kerSchemaNamespaceNotRegistered': {'doc': ''},
                                 'kerSuccess': {'doc': ''},
                                 'kerTiffDirectoryTooLarge': {'doc': ''},
                                 'kerTooLargeJpegSegment': {'doc': ''},
                                 'kerTooManyTiffDirectoryEntries': {'doc': ''},
                                 'kerTransferFailed': {'doc': ''},
                                 'kerUnhandledXmpNode': {'doc': ''},
                                 'kerUnhandledXmpdatum': {'doc': ''},
                                 'kerUnsupportedDataAreaOffsetType': {'doc': ''},
                                 'kerUnsupportedDateFormat': {'doc': ''},
                                 'kerUnsupportedImageType': {'doc': ''},
                                 'kerUnsupportedTimeFormat': {'doc': ''},
                                 'kerValueNotSet': {'doc': ''},
                                 'kerValueTooLarge': {'doc': 'Entry::setValue: '
                                                             'Value too '
                                                             'large. '},
                                 'kerWritingImageFormatUnsupported': {'doc': ''},
                                 'kerWrongTiffArrayElementTagType': {'doc': ''},
                                 'kerXMPToolkitError': {'doc': ''}}},
 'Exiv2::ImageType': {'doc': 'Supported image formats. ',
                      'strong': True,
                      'values': {'arw': {'doc': 'ARW image type (see '
                                                'class TiffImage) '},
                                 'asf': {'doc': 'Treating asf as an image '
                                                'type> '},
                                 'bmff': {'doc': 'BMFF (bmff) image type '
                                                 '(see class BMFF) '},
                                 'bmp': {'doc': 'Windows bitmap (bmp) '
                                                'image type (see class '
                                                'BmpImage) '},
                                 'cr2': {'doc': 'CR2 image type (see '
                                                'class Cr2Image) '},
                                 'crw': {'doc': 'CRW image type (see '
                                                'class CrwImage) '},
                                 'dng': {'doc': 'DNG image type (see '
                                                'class TiffImage) '},
                                 'eps': {'doc': 'EPS image type. '},
                                 'exv': {'doc': 'EXV image type (see '
                                                'class ExvImage) '},
                                 'gif': {'doc': 'GIF image type (see '
                                                'class GifImage) '},
                                 'jp2': {'doc': 'JPEG-2000 image type. '},
                                 'jpeg': {'doc': 'JPEG image type (see '
                                                 'class JpegImage) '},
                                 'mkv': {'doc': 'Treating mkv as an image '
                                                'type> '},
                                 'mrw': {'doc': 'MRW image type (see '
                                                'class MrwImage) '},
                                 'nef': {'doc': 'NEF image type (see '
                                                'class TiffImage) '},
                                 'none': {'doc': 'Not an image. '},
                                 'orf': {'doc': 'ORF image type (see '
                                                'class OrfImage) '},
                                 'pef': {'doc': 'PEF image type (see '
                                                'class TiffImage) '},
                                 'pgf': {'doc': 'PGF image type (see '
                                                'class PgfImage) '},
                                 'png': {'doc': 'PNG image type (see '
                                                'class PngImage) '},
                                 'psd': {'doc': 'Photoshop (PSD) image '
                                                'type (see class '
                                                'PsdImage) '},
                                 'qtime': {'doc': 'Treating qtime as an '
                                                  'image type> '},
                                 'raf': {'doc': 'RAF image type (see '
                                                'class RafImage) '},
                                 'riff': {'doc': 'Treating riff as an '
                                                 'image type> '},
                                 'rw2': {'doc': 'RW2 image type (see '
                                                'class Rw2Image) '},
                                 'sr2': {'doc': 'SR2 image type (see '
                                                'class TiffImage) '},
                                 'srw': {'doc': 'SRW image type (see '
                                                'class TiffImage) '},
                                 'tga': {'doc': 'Truevision TARGA (tga) '
                                                'image type (see class '
                                                'TgaImage) '},
                                 'tiff': {'doc': 'TIFF image type (see '
                                                 'class TiffImage) '},
                                 'webp': {'doc': 'Treating webp as an '
                                                 'image type> '},
                                 'xmp': {'doc': 'XMP sidecar files (see '
                                                'class XmpSidecar) '}}},
 'Exiv2::LogMsg::Level': {'doc': 'Defined log levels. To suppress all log '
                                 'messages, either set the log level to '
                                 'mute or set the log message handler to '
                                 '0. ',
                          'strong': False,
                          'values': {'debug': {'doc': ''},
                                     'error': {'doc': ''},
                                     'info': {'doc': ''},
                                     'mute': {'doc': ''},
                                     'warn': {'doc': ''}}},
 'Exiv2::MetadataId': {'doc': 'An identifier for each type of metadata. ',
                       'strong': False,
                       'values': {'mdComment': {'doc': ''},
                                  'mdExif': {'doc': ''},
                                  'mdIccProfile': {'doc': ''},
                                  'mdIptc': {'doc': ''},
                                  'mdNone': {'doc': ''},
                                  'mdXmp': {'doc': ''}}},
 'Exiv2::TypeId': {'doc': 'Exiv2 value type identifiers. \n'
                          '\n'
                          'Used primarily as identifiers when creating '
                          'Exiv2 Value instances. See Value::create. '
                          '0x0000 to 0xffff are reserved for TIFF (Exif) '
                          'types. ',
                   'strong': False,
                   'values': {'asciiString': {'doc': 'Exif ASCII type, '
                                                     '8-bit byte. '},
                              'comment': {'doc': 'Exiv2 type for the Exif '
                                                 'user comment. '},
                              'date': {'doc': 'IPTC date type. '},
                              'directory': {'doc': 'Exiv2 type for a CIFF '
                                                   'directory. '},
                              'invalidTypeId': {'doc': 'Invalid type '
                                                       'id. '},
                              'langAlt': {'doc': 'XMP language '
                                                 'alternative type. '},
                              'lastTypeId': {'doc': 'Last type id. '},
                              'signedByte': {'doc': 'Exif SBYTE type, an '
                                                    '8-bit signed '
                                                    '(twos-complement) '
                                                    'integer. '},
                              'signedLong': {'doc': 'Exif SLONG type, a '
                                                    '32-bit (4-byte) '
                                                    'signed '
                                                    '(twos-complement) '
                                                    'integer. '},
                              'signedLongLong': {'doc': 'Exif LONG LONG '
                                                        'type, 64-bit '
                                                        '(8-byte) signed '
                                                        'integer. '},
                              'signedRational': {'doc': 'Exif SRATIONAL '
                                                        'type, two '
                                                        'SLONGs: '
                                                        'numerator and '
                                                        'denumerator of a '
                                                        'fraction. '},
                              'signedShort': {'doc': 'Exif SSHORT type, a '
                                                     '16-bit (2-byte) '
                                                     'signed '
                                                     '(twos-complement) '
                                                     'integer. '},
                              'string': {'doc': 'IPTC string type. '},
                              'tiffDouble': {'doc': 'TIFF DOUBLE type, '
                                                    'double precision '
                                                    '(8-byte) IEEE '
                                                    'format. '},
                              'tiffFloat': {'doc': 'TIFF FLOAT type, '
                                                   'single precision '
                                                   '(4-byte) IEEE '
                                                   'format. '},
                              'tiffIfd': {'doc': 'TIFF IFD type, 32-bit '
                                                 '(4-byte) unsigned '
                                                 'integer. '},
                              'tiffIfd8': {'doc': 'TIFF IFD type, 64-bit '
                                                  '(8-byte) unsigned '
                                                  'integer. '},
                              'time': {'doc': 'IPTC time type. '},
                              'undefined': {'doc': 'Exif UNDEFINED type, '
                                                   'an 8-bit byte that '
                                                   'may contain '
                                                   'anything. '},
                              'unsignedByte': {'doc': 'Exif BYTE type, '
                                                      '8-bit unsigned '
                                                      'integer. '},
                              'unsignedLong': {'doc': 'Exif LONG type, '
                                                      '32-bit (4-byte) '
                                                      'unsigned '
                                                      'integer. '},
                              'unsignedLongLong': {'doc': 'Exif LONG LONG '
                                                          'type, 64-bit '
                                                          '(8-byte) '
                                                          'unsigned '
                                                          'integer. '},
                              'unsignedRational': {'doc': 'Exif RATIONAL '
                                                          'type, two '
                                                          'LONGs: '
                                                          'numerator and '
                                                          'denumerator of '
                                                          'a fraction. '},
                              'unsignedShort': {'doc': 'Exif SHORT type, '
                                                       '16-bit (2-byte) '
                                                       'unsigned '
                                                       'integer. '},
                              'xmpAlt': {'doc': 'XMP alternative type. '},
                              'xmpBag': {'doc': 'XMP bag type. '},
                              'xmpSeq': {'doc': 'XMP sequence type. '},
                              'xmpText': {'doc': 'XMP text type. '}}},
 'Exiv2::XmpCategory': {'doc': 'Category of an XMP property. ',
                        'strong': False,
                        'values': {'xmpExternal': {'doc': ''},
                                   'xmpInternal': {'doc': ''}}},
 'Exiv2::XmpValue::XmpArrayType': {'doc': 'XMP array types. ',
                                   'strong': False,
                                   'values': {'xaAlt': {'doc': ''},
                                              'xaBag': {'doc': ''},
                                              'xaNone': {'doc': ''},
                                              'xaSeq': {'doc': ''}}},
 'Exiv2::XmpValue::XmpStruct': {'doc': 'XMP structure indicator. ',
                                'strong': False,
                                'values': {'xsNone': {'doc': ''},
                                           'xsStruct': {'doc': ''}}}}