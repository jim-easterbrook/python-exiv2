/* This file was generated by utils/extract_enums.py
 * Do not make changes to this file.
 */
%fragment("_get_enum_data"{Exiv2::BasicIo::Position}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::BasicIo::Position)() {
    return _get_enum_data("Exiv2::BasicIo::Position",
        "beg", Exiv2::BasicIo::beg,
        "cur", Exiv2::BasicIo::cur,
        "end", Exiv2::BasicIo::end,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::CommentValue::CharsetId}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::CommentValue::CharsetId)() {
    return _get_enum_data("Exiv2::CommentValue::CharsetId",
        "ascii", Exiv2::CommentValue::ascii,
        "jis", Exiv2::CommentValue::jis,
        "unicode", Exiv2::CommentValue::unicode,
        "undefined", Exiv2::CommentValue::undefined,
        "invalidCharsetId", Exiv2::CommentValue::invalidCharsetId,
        "lastCharsetId", Exiv2::CommentValue::lastCharsetId,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::LogMsg::Level}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::LogMsg::Level)() {
    return _get_enum_data("Exiv2::LogMsg::Level",
        "debug", Exiv2::LogMsg::debug,
        "info", Exiv2::LogMsg::info,
        "warn", Exiv2::LogMsg::warn,
        "error", Exiv2::LogMsg::error,
        "mute", Exiv2::LogMsg::mute,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::XmpValue::XmpArrayType}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::XmpValue::XmpArrayType)() {
    return _get_enum_data("Exiv2::XmpValue::XmpArrayType",
        "xaNone", Exiv2::XmpValue::xaNone,
        "xaAlt", Exiv2::XmpValue::xaAlt,
        "xaBag", Exiv2::XmpValue::xaBag,
        "xaSeq", Exiv2::XmpValue::xaSeq,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::XmpValue::XmpStruct}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::XmpValue::XmpStruct)() {
    return _get_enum_data("Exiv2::XmpValue::XmpStruct",
        "xsNone", Exiv2::XmpValue::xsNone,
        "xsStruct", Exiv2::XmpValue::xsStruct,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::ErrorCode}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::ErrorCode)() {
    return _get_enum_data("Exiv2::ErrorCode",
        "kerSuccess", Exiv2::ErrorCode::kerSuccess,
        "kerGeneralError", Exiv2::ErrorCode::kerGeneralError,
        "kerErrorMessage", Exiv2::ErrorCode::kerErrorMessage,
        "kerCallFailed", Exiv2::ErrorCode::kerCallFailed,
        "kerNotAnImage", Exiv2::ErrorCode::kerNotAnImage,
        "kerInvalidDataset", Exiv2::ErrorCode::kerInvalidDataset,
        "kerInvalidRecord", Exiv2::ErrorCode::kerInvalidRecord,
        "kerInvalidKey", Exiv2::ErrorCode::kerInvalidKey,
        "kerInvalidTag", Exiv2::ErrorCode::kerInvalidTag,
        "kerValueNotSet", Exiv2::ErrorCode::kerValueNotSet,
        "kerDataSourceOpenFailed", Exiv2::ErrorCode::kerDataSourceOpenFailed,
        "kerFileOpenFailed", Exiv2::ErrorCode::kerFileOpenFailed,
        "kerFileContainsUnknownImageType", Exiv2::ErrorCode::kerFileContainsUnknownImageType,
        "kerMemoryContainsUnknownImageType", Exiv2::ErrorCode::kerMemoryContainsUnknownImageType,
        "kerUnsupportedImageType", Exiv2::ErrorCode::kerUnsupportedImageType,
        "kerFailedToReadImageData", Exiv2::ErrorCode::kerFailedToReadImageData,
        "kerNotAJpeg", Exiv2::ErrorCode::kerNotAJpeg,
        "kerFailedToMapFileForReadWrite", Exiv2::ErrorCode::kerFailedToMapFileForReadWrite,
        "kerFileRenameFailed", Exiv2::ErrorCode::kerFileRenameFailed,
        "kerTransferFailed", Exiv2::ErrorCode::kerTransferFailed,
        "kerMemoryTransferFailed", Exiv2::ErrorCode::kerMemoryTransferFailed,
        "kerInputDataReadFailed", Exiv2::ErrorCode::kerInputDataReadFailed,
        "kerImageWriteFailed", Exiv2::ErrorCode::kerImageWriteFailed,
        "kerNoImageInInputData", Exiv2::ErrorCode::kerNoImageInInputData,
        "kerInvalidIfdId", Exiv2::ErrorCode::kerInvalidIfdId,
        "kerValueTooLarge", Exiv2::ErrorCode::kerValueTooLarge,
        "kerDataAreaValueTooLarge", Exiv2::ErrorCode::kerDataAreaValueTooLarge,
        "kerOffsetOutOfRange", Exiv2::ErrorCode::kerOffsetOutOfRange,
        "kerUnsupportedDataAreaOffsetType", Exiv2::ErrorCode::kerUnsupportedDataAreaOffsetType,
        "kerInvalidCharset", Exiv2::ErrorCode::kerInvalidCharset,
        "kerUnsupportedDateFormat", Exiv2::ErrorCode::kerUnsupportedDateFormat,
        "kerUnsupportedTimeFormat", Exiv2::ErrorCode::kerUnsupportedTimeFormat,
        "kerWritingImageFormatUnsupported", Exiv2::ErrorCode::kerWritingImageFormatUnsupported,
        "kerInvalidSettingForImage", Exiv2::ErrorCode::kerInvalidSettingForImage,
        "kerNotACrwImage", Exiv2::ErrorCode::kerNotACrwImage,
        "kerFunctionNotSupported", Exiv2::ErrorCode::kerFunctionNotSupported,
        "kerNoNamespaceInfoForXmpPrefix", Exiv2::ErrorCode::kerNoNamespaceInfoForXmpPrefix,
        "kerNoPrefixForNamespace", Exiv2::ErrorCode::kerNoPrefixForNamespace,
        "kerTooLargeJpegSegment", Exiv2::ErrorCode::kerTooLargeJpegSegment,
        "kerUnhandledXmpdatum", Exiv2::ErrorCode::kerUnhandledXmpdatum,
        "kerUnhandledXmpNode", Exiv2::ErrorCode::kerUnhandledXmpNode,
        "kerXMPToolkitError", Exiv2::ErrorCode::kerXMPToolkitError,
        "kerDecodeLangAltPropertyFailed", Exiv2::ErrorCode::kerDecodeLangAltPropertyFailed,
        "kerDecodeLangAltQualifierFailed", Exiv2::ErrorCode::kerDecodeLangAltQualifierFailed,
        "kerEncodeLangAltPropertyFailed", Exiv2::ErrorCode::kerEncodeLangAltPropertyFailed,
        "kerPropertyNameIdentificationFailed", Exiv2::ErrorCode::kerPropertyNameIdentificationFailed,
        "kerSchemaNamespaceNotRegistered", Exiv2::ErrorCode::kerSchemaNamespaceNotRegistered,
        "kerNoNamespaceForPrefix", Exiv2::ErrorCode::kerNoNamespaceForPrefix,
        "kerAliasesNotSupported", Exiv2::ErrorCode::kerAliasesNotSupported,
        "kerInvalidXmpText", Exiv2::ErrorCode::kerInvalidXmpText,
        "kerTooManyTiffDirectoryEntries", Exiv2::ErrorCode::kerTooManyTiffDirectoryEntries,
        "kerMultipleTiffArrayElementTagsInDirectory", Exiv2::ErrorCode::kerMultipleTiffArrayElementTagsInDirectory,
        "kerWrongTiffArrayElementTagType", Exiv2::ErrorCode::kerWrongTiffArrayElementTagType,
        "kerInvalidKeyXmpValue", Exiv2::ErrorCode::kerInvalidKeyXmpValue,
        "kerInvalidIccProfile", Exiv2::ErrorCode::kerInvalidIccProfile,
        "kerInvalidXMP", Exiv2::ErrorCode::kerInvalidXMP,
        "kerTiffDirectoryTooLarge", Exiv2::ErrorCode::kerTiffDirectoryTooLarge,
        "kerInvalidTypeValue", Exiv2::ErrorCode::kerInvalidTypeValue,
        "kerInvalidLangAltValue", Exiv2::ErrorCode::kerInvalidLangAltValue,
        "kerInvalidMalloc", Exiv2::ErrorCode::kerInvalidMalloc,
        "kerCorruptedMetadata", Exiv2::ErrorCode::kerCorruptedMetadata,
        "kerArithmeticOverflow", Exiv2::ErrorCode::kerArithmeticOverflow,
        "kerMallocFailed", Exiv2::ErrorCode::kerMallocFailed,
        "kerInvalidIconvEncoding", Exiv2::ErrorCode::kerInvalidIconvEncoding,
        "kerFileAccessDisabled", Exiv2::ErrorCode::kerFileAccessDisabled,
        "kerErrorCount", Exiv2::ErrorCode::kerErrorCount,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::ImageType}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::ImageType)() {
    return _get_enum_data("Exiv2::ImageType",
        "none", Exiv2::ImageType::none,
        "arw", Exiv2::ImageType::arw,
        "asf", Exiv2::ImageType::asf,
        "bigtiff", Exiv2::ImageType::bigtiff,
        "bmff", Exiv2::ImageType::bmff,
        "bmp", Exiv2::ImageType::bmp,
        "cr2", Exiv2::ImageType::cr2,
        "crw", Exiv2::ImageType::crw,
        "dng", Exiv2::ImageType::dng,
        "eps", Exiv2::ImageType::eps,
        "exv", Exiv2::ImageType::exv,
        "gif", Exiv2::ImageType::gif,
        "jp2", Exiv2::ImageType::jp2,
        "jpeg", Exiv2::ImageType::jpeg,
        "mrw", Exiv2::ImageType::mrw,
        "nef", Exiv2::ImageType::nef,
        "orf", Exiv2::ImageType::orf,
        "pef", Exiv2::ImageType::pef,
        "png", Exiv2::ImageType::png,
        "pgf", Exiv2::ImageType::pgf,
        "psd", Exiv2::ImageType::psd,
        "raf", Exiv2::ImageType::raf,
        "rw2", Exiv2::ImageType::rw2,
        "sr2", Exiv2::ImageType::sr2,
        "srw", Exiv2::ImageType::srw,
        "tga", Exiv2::ImageType::tga,
        "tiff", Exiv2::ImageType::tiff,
        "webp", Exiv2::ImageType::webp,
        "xmp", Exiv2::ImageType::xmp,
        "qtime", Exiv2::ImageType::qtime,
        "riff", Exiv2::ImageType::riff,
        "mkv", Exiv2::ImageType::mkv,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::XmpCategory}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::XmpCategory)() {
    return _get_enum_data("Exiv2::XmpCategory",
        "xmpInternal", Exiv2::xmpInternal,
        "xmpExternal", Exiv2::xmpExternal,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::IfdId}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::IfdId)() {
    return _get_enum_data("Exiv2::IfdId",
        "ifdIdNotSet", Exiv2::IfdId::ifdIdNotSet,
        "ifd0Id", Exiv2::IfdId::ifd0Id,
        "ifd1Id", Exiv2::IfdId::ifd1Id,
        "ifd2Id", Exiv2::IfdId::ifd2Id,
        "ifd3Id", Exiv2::IfdId::ifd3Id,
        "exifId", Exiv2::IfdId::exifId,
        "gpsId", Exiv2::IfdId::gpsId,
        "iopId", Exiv2::IfdId::iopId,
        "mpfId", Exiv2::IfdId::mpfId,
        "subImage1Id", Exiv2::IfdId::subImage1Id,
        "subImage2Id", Exiv2::IfdId::subImage2Id,
        "subImage3Id", Exiv2::IfdId::subImage3Id,
        "subImage4Id", Exiv2::IfdId::subImage4Id,
        "subImage5Id", Exiv2::IfdId::subImage5Id,
        "subImage6Id", Exiv2::IfdId::subImage6Id,
        "subImage7Id", Exiv2::IfdId::subImage7Id,
        "subImage8Id", Exiv2::IfdId::subImage8Id,
        "subImage9Id", Exiv2::IfdId::subImage9Id,
        "subThumb1Id", Exiv2::IfdId::subThumb1Id,
        "panaRawId", Exiv2::IfdId::panaRawId,
        "mnId", Exiv2::IfdId::mnId,
        "canonId", Exiv2::IfdId::canonId,
        "canonAfCId", Exiv2::IfdId::canonAfCId,
        "canonAfMiAdjId", Exiv2::IfdId::canonAfMiAdjId,
        "canonAmId", Exiv2::IfdId::canonAmId,
        "canonAsId", Exiv2::IfdId::canonAsId,
        "canonCbId", Exiv2::IfdId::canonCbId,
        "canonCiId", Exiv2::IfdId::canonCiId,
        "canonCsId", Exiv2::IfdId::canonCsId,
        "canonFilId", Exiv2::IfdId::canonFilId,
        "canonFlId", Exiv2::IfdId::canonFlId,
        "canonHdrId", Exiv2::IfdId::canonHdrId,
        "canonLeId", Exiv2::IfdId::canonLeId,
        "canonMeId", Exiv2::IfdId::canonMeId,
        "canonMoID", Exiv2::IfdId::canonMoID,
        "canonMvId", Exiv2::IfdId::canonMvId,
        "canonRawBId", Exiv2::IfdId::canonRawBId,
        "canonSiId", Exiv2::IfdId::canonSiId,
        "canonCfId", Exiv2::IfdId::canonCfId,
        "canonContrastId", Exiv2::IfdId::canonContrastId,
        "canonFcd1Id", Exiv2::IfdId::canonFcd1Id,
        "canonFcd2Id", Exiv2::IfdId::canonFcd2Id,
        "canonFcd3Id", Exiv2::IfdId::canonFcd3Id,
        "canonLiOpId", Exiv2::IfdId::canonLiOpId,
        "canonMyColorID", Exiv2::IfdId::canonMyColorID,
        "canonPiId", Exiv2::IfdId::canonPiId,
        "canonPaId", Exiv2::IfdId::canonPaId,
        "canonTiId", Exiv2::IfdId::canonTiId,
        "canonFiId", Exiv2::IfdId::canonFiId,
        "canonPrId", Exiv2::IfdId::canonPrId,
        "canonPreID", Exiv2::IfdId::canonPreID,
        "canonVigCorId", Exiv2::IfdId::canonVigCorId,
        "canonVigCor2Id", Exiv2::IfdId::canonVigCor2Id,
        "canonWbId", Exiv2::IfdId::canonWbId,
        "casioId", Exiv2::IfdId::casioId,
        "casio2Id", Exiv2::IfdId::casio2Id,
        "fujiId", Exiv2::IfdId::fujiId,
        "minoltaId", Exiv2::IfdId::minoltaId,
        "minoltaCs5DId", Exiv2::IfdId::minoltaCs5DId,
        "minoltaCs7DId", Exiv2::IfdId::minoltaCs7DId,
        "minoltaCsOldId", Exiv2::IfdId::minoltaCsOldId,
        "minoltaCsNewId", Exiv2::IfdId::minoltaCsNewId,
        "nikon1Id", Exiv2::IfdId::nikon1Id,
        "nikon2Id", Exiv2::IfdId::nikon2Id,
        "nikon3Id", Exiv2::IfdId::nikon3Id,
        "nikonPvId", Exiv2::IfdId::nikonPvId,
        "nikonVrId", Exiv2::IfdId::nikonVrId,
        "nikonPcId", Exiv2::IfdId::nikonPcId,
        "nikonWtId", Exiv2::IfdId::nikonWtId,
        "nikonIiId", Exiv2::IfdId::nikonIiId,
        "nikonAfId", Exiv2::IfdId::nikonAfId,
        "nikonAf21Id", Exiv2::IfdId::nikonAf21Id,
        "nikonAf22Id", Exiv2::IfdId::nikonAf22Id,
        "nikonAFTId", Exiv2::IfdId::nikonAFTId,
        "nikonFiId", Exiv2::IfdId::nikonFiId,
        "nikonMeId", Exiv2::IfdId::nikonMeId,
        "nikonFl1Id", Exiv2::IfdId::nikonFl1Id,
        "nikonFl2Id", Exiv2::IfdId::nikonFl2Id,
        "nikonFl3Id", Exiv2::IfdId::nikonFl3Id,
        "nikonFl6Id", Exiv2::IfdId::nikonFl6Id,
        "nikonFl7Id", Exiv2::IfdId::nikonFl7Id,
        "nikonSi1Id", Exiv2::IfdId::nikonSi1Id,
        "nikonSi2Id", Exiv2::IfdId::nikonSi2Id,
        "nikonSi3Id", Exiv2::IfdId::nikonSi3Id,
        "nikonSi4Id", Exiv2::IfdId::nikonSi4Id,
        "nikonSi5Id", Exiv2::IfdId::nikonSi5Id,
        "nikonSi6Id", Exiv2::IfdId::nikonSi6Id,
        "nikonLd1Id", Exiv2::IfdId::nikonLd1Id,
        "nikonLd2Id", Exiv2::IfdId::nikonLd2Id,
        "nikonLd3Id", Exiv2::IfdId::nikonLd3Id,
        "nikonLd4Id", Exiv2::IfdId::nikonLd4Id,
        "nikonCb1Id", Exiv2::IfdId::nikonCb1Id,
        "nikonCb2Id", Exiv2::IfdId::nikonCb2Id,
        "nikonCb2aId", Exiv2::IfdId::nikonCb2aId,
        "nikonCb2bId", Exiv2::IfdId::nikonCb2bId,
        "nikonCb3Id", Exiv2::IfdId::nikonCb3Id,
        "nikonCb4Id", Exiv2::IfdId::nikonCb4Id,
        "olympusId", Exiv2::IfdId::olympusId,
        "olympus2Id", Exiv2::IfdId::olympus2Id,
        "olympusCsId", Exiv2::IfdId::olympusCsId,
        "olympusEqId", Exiv2::IfdId::olympusEqId,
        "olympusRdId", Exiv2::IfdId::olympusRdId,
        "olympusRd2Id", Exiv2::IfdId::olympusRd2Id,
        "olympusIpId", Exiv2::IfdId::olympusIpId,
        "olympusFiId", Exiv2::IfdId::olympusFiId,
        "olympusFe1Id", Exiv2::IfdId::olympusFe1Id,
        "olympusFe2Id", Exiv2::IfdId::olympusFe2Id,
        "olympusFe3Id", Exiv2::IfdId::olympusFe3Id,
        "olympusFe4Id", Exiv2::IfdId::olympusFe4Id,
        "olympusFe5Id", Exiv2::IfdId::olympusFe5Id,
        "olympusFe6Id", Exiv2::IfdId::olympusFe6Id,
        "olympusFe7Id", Exiv2::IfdId::olympusFe7Id,
        "olympusFe8Id", Exiv2::IfdId::olympusFe8Id,
        "olympusFe9Id", Exiv2::IfdId::olympusFe9Id,
        "olympusRiId", Exiv2::IfdId::olympusRiId,
        "panasonicId", Exiv2::IfdId::panasonicId,
        "pentaxId", Exiv2::IfdId::pentaxId,
        "pentaxDngId", Exiv2::IfdId::pentaxDngId,
        "samsung2Id", Exiv2::IfdId::samsung2Id,
        "samsungPvId", Exiv2::IfdId::samsungPvId,
        "samsungPwId", Exiv2::IfdId::samsungPwId,
        "sigmaId", Exiv2::IfdId::sigmaId,
        "sony1Id", Exiv2::IfdId::sony1Id,
        "sony2Id", Exiv2::IfdId::sony2Id,
        "sonyMltId", Exiv2::IfdId::sonyMltId,
        "sony1CsId", Exiv2::IfdId::sony1CsId,
        "sony1Cs2Id", Exiv2::IfdId::sony1Cs2Id,
        "sony2CsId", Exiv2::IfdId::sony2CsId,
        "sony2Cs2Id", Exiv2::IfdId::sony2Cs2Id,
        "sony2FpId", Exiv2::IfdId::sony2FpId,
        "sonyMisc1Id", Exiv2::IfdId::sonyMisc1Id,
        "sonyMisc2bId", Exiv2::IfdId::sonyMisc2bId,
        "sonyMisc3cId", Exiv2::IfdId::sonyMisc3cId,
        "sonySInfo1Id", Exiv2::IfdId::sonySInfo1Id,
        "sony2010eId", Exiv2::IfdId::sony2010eId,
        "sony1MltCs7DId", Exiv2::IfdId::sony1MltCs7DId,
        "sony1MltCsOldId", Exiv2::IfdId::sony1MltCsOldId,
        "sony1MltCsNewId", Exiv2::IfdId::sony1MltCsNewId,
        "sony1MltCsA100Id", Exiv2::IfdId::sony1MltCsA100Id,
        "tagInfoMvId", Exiv2::IfdId::tagInfoMvId,
        "lastId", Exiv2::IfdId::lastId,
        "ignoreId", Exiv2::IfdId::ignoreId,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::SectionId}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::SectionId)() {
    return _get_enum_data("Exiv2::SectionId",
        "sectionIdNotSet", Exiv2::SectionId::sectionIdNotSet,
        "imgStruct", Exiv2::SectionId::imgStruct,
        "recOffset", Exiv2::SectionId::recOffset,
        "imgCharacter", Exiv2::SectionId::imgCharacter,
        "otherTags", Exiv2::SectionId::otherTags,
        "exifFormat", Exiv2::SectionId::exifFormat,
        "exifVersion", Exiv2::SectionId::exifVersion,
        "imgConfig", Exiv2::SectionId::imgConfig,
        "userInfo", Exiv2::SectionId::userInfo,
        "relatedFile", Exiv2::SectionId::relatedFile,
        "dateTime", Exiv2::SectionId::dateTime,
        "captureCond", Exiv2::SectionId::captureCond,
        "gpsTags", Exiv2::SectionId::gpsTags,
        "iopTags", Exiv2::SectionId::iopTags,
        "mpfTags", Exiv2::SectionId::mpfTags,
        "makerTags", Exiv2::SectionId::makerTags,
        "dngTags", Exiv2::SectionId::dngTags,
        "panaRaw", Exiv2::SectionId::panaRaw,
        "tiffEp", Exiv2::SectionId::tiffEp,
        "tiffPm6", Exiv2::SectionId::tiffPm6,
        "adobeOpi", Exiv2::SectionId::adobeOpi,
        "lastSectionId", Exiv2::SectionId::lastSectionId,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::ByteOrder}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::ByteOrder)() {
    return _get_enum_data("Exiv2::ByteOrder",
        "invalidByteOrder", Exiv2::invalidByteOrder,
        "littleEndian", Exiv2::littleEndian,
        "bigEndian", Exiv2::bigEndian,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::MetadataId}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::MetadataId)() {
    return _get_enum_data("Exiv2::MetadataId",
        "mdNone", Exiv2::mdNone,
        "mdExif", Exiv2::mdExif,
        "mdIptc", Exiv2::mdIptc,
        "mdComment", Exiv2::mdComment,
        "mdXmp", Exiv2::mdXmp,
        "mdIccProfile", Exiv2::mdIccProfile,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::AccessMode}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::AccessMode)() {
    return _get_enum_data("Exiv2::AccessMode",
        "amNone", Exiv2::amNone,
        "amRead", Exiv2::amRead,
        "amWrite", Exiv2::amWrite,
        "amReadWrite", Exiv2::amReadWrite,
        NULL);
};
}
%fragment("_get_enum_data"{Exiv2::TypeId}, "header",
    fragment="_get_enum_data") {
static PyObject* _get_enum_data_%mangle(Exiv2::TypeId)() {
    return _get_enum_data("Exiv2::TypeId",
        "unsignedByte", Exiv2::unsignedByte,
        "asciiString", Exiv2::asciiString,
        "unsignedShort", Exiv2::unsignedShort,
        "unsignedLong", Exiv2::unsignedLong,
        "unsignedRational", Exiv2::unsignedRational,
        "signedByte", Exiv2::signedByte,
        "undefined", Exiv2::undefined,
        "signedShort", Exiv2::signedShort,
        "signedLong", Exiv2::signedLong,
        "signedRational", Exiv2::signedRational,
        "tiffFloat", Exiv2::tiffFloat,
        "tiffDouble", Exiv2::tiffDouble,
        "tiffIfd", Exiv2::tiffIfd,
        "unsignedLongLong", Exiv2::unsignedLongLong,
        "signedLongLong", Exiv2::signedLongLong,
        "tiffIfd8", Exiv2::tiffIfd8,
        "string", Exiv2::string,
        "date", Exiv2::date,
        "time", Exiv2::time,
        "comment", Exiv2::comment,
        "directory", Exiv2::directory,
        "xmpText", Exiv2::xmpText,
        "xmpAlt", Exiv2::xmpAlt,
        "xmpBag", Exiv2::xmpBag,
        "xmpSeq", Exiv2::xmpSeq,
        "langAlt", Exiv2::langAlt,
        "invalidTypeId", Exiv2::invalidTypeId,
        "lastTypeId", Exiv2::lastTypeId,
        NULL);
};
}
